"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatCFNPathParamsForExpressJs = exports.validatePathName = void 0;
exports.validatePathName = (name, paths) => {
    if (name.length === 0) {
        return 'The path must not be empty';
    }
    if (name.charAt(name.length - 1) === '/') {
        return 'The path must not end with /';
    }
    if (name.charAt(0) !== '/') {
        return 'The path must begin with / e.g. /items';
    }
    if (!/^(?:\/(?:[a-zA-Z0-9\-]+|{[a-zA-Z0-9\-]+}))+$/.test(name)) {
        return 'Each path part must use characters a-z A-Z 0-9 - and must not be empty.\nOptionally, a path part can be surrounded by { } to denote a path parameter.';
    }
    const split = name.split('/').filter(sub => sub !== '');
    let subpath = '';
    const subMatch = split.some(sub => {
        subpath = `${subpath}/${sub}`;
        return paths.map(path => path.name).find(name => name === subpath) !== undefined;
    });
    if (subMatch) {
        return `An existing path already matches this sub-path: ${subpath}`;
    }
    return true;
};
exports.formatCFNPathParamsForExpressJs = (path) => {
    return path.replace(/{([a-zA-Z0-9\-]+)}/g, ':$1');
};
//# sourceMappingURL=rest-api-path-utils.js.map